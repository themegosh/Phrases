@model MyVoiceMVC.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<div class="login">
    <div class="content">
        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h3 class="form-title font-green">Change Password</h3>
            @Html.ValidationSummary(true, "", new { @class = "alert text-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.OldPassword, new { @class = "control-label visible-ie8 visible-ie9" })
                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "Old Password" })
                @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NewPassword, new { @class = "control-label visible-ie8 visible-ie9" })
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "New Password" })
                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label visible-ie8 visible-ie9" })
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "Confirm New Password" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-actions">
                <input type="submit" value="Change password" class="btn green uppercase btn-block" />
            </div>
            <div class="create-account">
                <p>
                    @Html.ActionLink("Home", "Index", "Home", null, new { @class = "uppercase" })
                </p>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}