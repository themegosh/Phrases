@using Phrases.Models
@model LoginViewModel
@{
    ViewBag.Title = "My Voice - Log in";
}

<div class="content">
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login-form", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h3 class="form-title font-green">Sign In</h3>
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label visible-ie8 visible-ie9" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "Email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "control-label visible-ie8 visible-ie9" })
            @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "Password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-actions">
            <button type="submit" class="btn green uppercase">Login</button>
            <label class="rememberme check mt-checkbox mt-checkbox-outline pull-right">
                @Html.CheckBoxFor(m => m.RememberMe, new { @checked = "checked" })
                @Html.DisplayNameFor(m => m.RememberMe)
                <span></span>
            </label>
        </div>
        <div class="create-account">
            <p>
                @Html.ActionLink("Create an account", "Register", null, new { @class = "uppercase" })
            </p>
        </div>
            
    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}